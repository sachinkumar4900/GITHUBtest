{
  "custom": {
    "ShiftTimes": [
      {
        "EndTime": 1750746000000,
        "StartTime": 1750717200000
      }
    ],
    "Site": "Moorpark",
    "WOData": {
      "$": [
        "ds",
        192,
        1749700952304
      ],
      "$columns": [
        {
          "data": [
            1,
            2,
            3,
            4
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            "SB01",
            "SB02",
            "SB03",
            "SB04"
          ],
          "name": "Asset",
          "type": "String"
        },
        {
          "data": [
            1,
            1,
            1,
            1
          ],
          "name": "Availability",
          "type": "Double"
        },
        {
          "data": [
            0,
            1.8357142857142859,
            0,
            0
          ],
          "name": "Performance",
          "type": "Double"
        },
        {
          "data": [
            1,
            1,
            1,
            1
          ],
          "name": "Quality",
          "type": "Double"
        },
        {
          "data": [
            0,
            1.8357142857142859,
            0,
            0
          ],
          "name": "OEE",
          "type": "Double"
        },
        {
          "data": [
            "Running",
            "Running",
            "Running",
            "Running"
          ],
          "name": "Status",
          "type": "String"
        },
        {
          "data": [
            null,
            null,
            null,
            null
          ],
          "name": "WorkOrder",
          "type": "String"
        },
        {
          "data": [
            4,
            4,
            4,
            4
          ],
          "name": "Andon",
          "type": "Integer"
        }
      ]
    },
    "offset": -7,
    "tagPaths": [
      {
        "End": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750742828366
        },
        "Start": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750717200000
        },
        "tagPath": "[default]Moorpark/Molding/IM43"
      },
      {
        "End": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750742828366
        },
        "Start": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750717200000
        },
        "tagPath": "[default]Moorpark/Molding/IM45"
      },
      {
        "End": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750742828366
        },
        "Start": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750717200000
        },
        "tagPath": "[default]Moorpark/Molding/IM48"
      },
      {
        "End": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750742828366
        },
        "Start": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750717200000
        },
        "tagPath": "[default]Moorpark/Molding/IM50"
      },
      {
        "End": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750742828366
        },
        "Start": {
          "$": [
            "ts",
            192,
            1750742831394
          ],
          "$ts": 1750717200000
        },
        "tagPath": "[default]Moorpark/Molding/IM54"
      }
    ]
  },
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\tself.session.custom.ActiveWindow \u003d \"Value Stream Overview\""
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {
    "processAreaID": 2
  },
  "propConfig": {
    "custom.ShiftTimes": {
      "binding": {
        "config": {
          "parameters": {
            "siteID": "{session.custom.ProductionSiteID}",
            "vsType": "if({/root/Dropdown_0.props.value} \u003d 1,\r \t\u0027Assembly\u0027, \u0027Molding\u0027)"
          },
          "queryPath": "Overview/GetValueStreamShiftTimes",
          "returnFormat": "json"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.Site": {
      "binding": {
        "config": {
          "parameters": {
            "siteID": "{session.custom.ProductionSiteID}"
          },
          "queryPath": "Overview/GetSiteNameByID"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.WOData": {
      "binding": {
        "config": {
          "parameters": {
            "siteID": "{session.custom.ProductionSiteID}",
            "start": "{/root/Dropdown.custom.Start}",
            "typeID": "{/root/Dropdown_0.props.value}"
          },
          "polling": {
            "enabled": true,
            "rate": "60"
          },
          "queryPath": "Overview/GetWOStatusByLineTypeAndSite"
        },
        "transforms": [
          {
            "code": "\tds \u003d []\n\theaders \u003d [\u0027ID\u0027, \u0027Asset\u0027, \u0027Availability\u0027, \u0027Performance\u0027, \u0027Quality\u0027, \u0027OEE\u0027, \u0027Status\u0027, \u0027WorkOrder\u0027, \u0027Andon\u0027]\n\tfor i in range(value.getRowCount()):\n\t\tasset \u003d value.getValueAt(i, \u0027Asset\u0027)\n\t\t\n\t\tif asset.startswith(\u0027IM\u0027):\n\t\t\tprefix \u003d \"[default]Moorpark/Molding/\"\n\t\telif asset.startswith(\u0027P\u0027) or asset.startswith(\u0027A\u0027):\n\t\t\tprefix \u003d \"[default]Sanford/Assembly/\"\n\t\telse:\n\t\t\tprefix \u003d \"[default]Sanford/Molding/\"\n\t\t\n\t\ttagPath \u003d prefix + asset \n\t\tstart \u003d self.getChild(\"root\").getChild(\"Dropdown\").custom.Start\n\t\tend \u003d self.getChild(\"root\").getChild(\"Dropdown\").custom.End\n\t\t\n\t\tavail \u003d OEE.getAvailability(tagPath, start, end)\n\t\tperf \u003d OEE.getPerformance(tagPath, start, end)\n\t\tqual \u003d OEE.getQuality(tagPath, start, end)\n\t\toee \u003d avail * perf * qual\n\t\t\n\t\tstatus \u003d \u0027Running\u0027\n\t\tworkOrder \u003d system.tag.readBlocking([tagPath + \"/Work Order/Name\"])[0].value\n\t\t\n\t\tds.append([value.getValueAt(i, \u0027ID\u0027), value.getValueAt(i, \u0027Asset\u0027), avail, perf, qual, oee, status, workOrder, 4])\n\t\n\treturn system.dataset.toDataSet(headers, ds)",
            "type": "script"
          }
        ],
        "type": "query"
      },
      "persistent": true
    },
    "custom.offset": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.Site}"
          },
          "tagPath": "General/{1} UTC offset"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.tagPaths": {
      "binding": {
        "config": {
          "expression": "addSeconds({/root/Dropdown.custom.Start}, getSecond(now(1000)))"
        },
        "transforms": [
          {
            "code": "\ti \u003d 0\n\twhile self.getChild(\"root\").getChild(\"Dropdown_0\").props.options.getValueAt(i,\"ID\") !\u003d self.getChild(\"root\").getChild(\"Dropdown_0\").props.value:\n\t\ti +\u003d 1\n\tpath \u003d self.custom.Site + \"/\" + self.getChild(\"root\").getChild(\"Dropdown_0\").props.options.getValueAt(i,\"Name\")\n\tds \u003d []\n\tfor row in system.tag.browse(path):\n\t\tif \u0027Cycle Times\u0027 not in str(row[\u0027fullPath\u0027]):\n\t\t\tds.append({\"tagPath\":row[\u0027fullPath\u0027], \"Start\":self.getChild(\"root\").getChild(\"Dropdown\").custom.Start, \"End\":self.getChild(\"root\").getChild(\"Dropdown\").custom.End})\n\t\t\n\treturn ds",
            "type": "script"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "params.processAreaID": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 600,
      "width": 850
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "GaugePanel"
        },
        "position": {
          "height": 0.25,
          "width": 0.9765,
          "x": 0.0118,
          "y": 0.125
        },
        "propConfig": {
          "props.params.Availability": {
            "binding": {
              "config": {
                "expression": "mean({view.custom.WOData}, \"Availability\")"
              },
              "overlayOptOut": true,
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "expr"
            }
          },
          "props.params.OEE": {
            "binding": {
              "config": {
                "expression": "(toInt({this.props.params.Performance}) / 100)\r\n*\r\n(toInt({this.props.params.Availability}) / 100)\r\n*\r\n(toInt({this.props.params.Quality}) / 100)"
              },
              "overlayOptOut": true,
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "expr"
            }
          },
          "props.params.Performance": {
            "binding": {
              "config": {
                "expression": "mean({view.custom.WOData}, \"Performance\")"
              },
              "overlayOptOut": true,
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "expr"
            }
          },
          "props.params.Quality": {
            "binding": {
              "config": {
                "expression": "mean({view.custom.WOData}, \"Quality\")"
              },
              "overlayOptOut": true,
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "path": "OEE/NestedViews/GaugePanel",
          "style": {
            "borderBottomLeftRadius": 8,
            "borderBottomRightRadius": 8,
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 8
          }
        },
        "type": "ia.display.view"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tself.view.refreshBinding(\"custom.tagPaths\")"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Dropdown_0"
        },
        "position": {
          "height": 0.06,
          "width": 0.3012,
          "x": 0.0118,
          "y": 0.0383
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "parameters": {
                  "siteID": "{session.custom.ProductionSiteID}"
                },
                "queryPath": "ProductionLine/GetProductionLineTypesForDropdownBySiteID",
                "returnFormat": "dataset"
              },
              "type": "query"
            }
          },
          "props.value": {
            "binding": {
              "config": {
                "path": "view.params.processAreaID"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "search": {
            "enabled": false
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\t#self.parent.getChild(\"FlexContainer\").getChild(\"Table_0\").refreshBinding(\"props.data\")\n\tself.view.refreshBinding(\"custom.tagPaths\")"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Dropdown"
        },
        "position": {
          "height": 0.06,
          "width": 0.2588,
          "x": 0.7294,
          "y": 0.0383
        },
        "propConfig": {
          "custom.End": {
            "binding": {
              "config": {
                "expression": "now(10000)//if({this.props.value} \u003d \u0027Day\u0027, now(10000), fromMillis({view.custom.ShiftTimes[0].EndTime}))"
              },
              "type": "expr"
            }
          },
          "custom.Start": {
            "binding": {
              "config": {
                "expression": "if(\t{this.props.value} \u003d \u0027Day\u0027,\r\n\tif( getHour24(now(10000)) \u003c ({view.custom.offset} * -1), \r\n\t\taddMinutes( midnight(addDays(now(10000), -1)), {view.custom.offset} * -60) ,\r\n\t\taddMinutes( midnight(now(10000)), {view.custom.offset} * -60) \r\n\t),  \r\n\tfromMillis({view.custom.ShiftTimes[0].StartTime})\r\n)"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "options": [
            {
              "label": "Day",
              "value": "Day"
            },
            {
              "label": "Shift",
              "value": "Shift"
            }
          ],
          "search": {
            "enabled": false
          },
          "value": "Shift"
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "FlexRepeater"
        },
        "position": {
          "height": 0.5033,
          "width": 0.975,
          "x": 0.0125,
          "y": 0.4828
        },
        "propConfig": {
          "props.instances": {
            "binding": {
              "config": {
                "path": "view.custom.tagPaths"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "direction": "column",
          "path": "OEE/NestedViews/AssetDataRow",
          "useDefaultViewWidth": false
        },
        "type": "ia.display.flex-repeater"
      },
      {
        "meta": {
          "name": "FlexRepeater_0"
        },
        "position": {
          "height": 0.09,
          "width": 0.975,
          "x": 0.0125,
          "y": 0.3882
        },
        "props": {
          "instances": [
            {
              "instancePosition": {},
              "instanceStyle": {
                "classes": ""
              },
              "text": "Asset"
            },
            {
              "instancePosition": {},
              "instanceStyle": {
                "classes": ""
              },
              "text": "OEE"
            },
            {
              "instancePosition": {},
              "instanceStyle": {
                "classes": ""
              },
              "text": "Availability"
            },
            {
              "instancePosition": {},
              "instanceStyle": {
                "classes": ""
              },
              "text": "Performance"
            },
            {
              "instancePosition": {},
              "instanceStyle": {
                "classes": ""
              },
              "text": "Quality"
            }
          ],
          "path": "OEE/NestedViews/AssetHeaderData",
          "useDefaultViewHeight": false,
          "useDefaultViewWidth": false
        },
        "type": "ia.display.flex-repeater"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tif self.session.props.locale \u003d\u003d \"en-US\":\n\t\tself.session.props.locale \u003d \"es-US\"\n\telse:\n\t\tself.session.props.locale \u003d \"en-US\""
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Button",
          "visible": false
        },
        "position": {
          "height": 0.0567,
          "width": 0.0941,
          "x": 0.4165,
          "y": 0.05
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "Label",
          "visible": false
        },
        "position": {
          "height": 0.0533,
          "width": 0.2835,
          "x": 0.3671,
          "y": 0.0117
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "../Dropdown.custom.Start"
              },
              "type": "property"
            }
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_0",
          "visible": false
        },
        "position": {
          "height": 0.0533,
          "width": 0.2729,
          "x": 0.3671,
          "y": 0.0584
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "../Dropdown.custom.End"
              },
              "type": "property"
            }
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "position": {
      "x": -0.0694,
      "y": -0.015
    },
    "props": {
      "mode": "percent",
      "style": {
        "backgroundColor": "#EEEEEE"
      }
    },
    "type": "ia.container.coord"
  }
}