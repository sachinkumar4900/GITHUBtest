{
  "custom": {
    "AndonHeader": "47C7B1E7-64DB-47D8-A293-C65FB5191E80",
    "AssetType": "Molding",
    "DTReason": null,
    "DowntimeEventID": -1,
    "ProductionLineID": 1
  },
  "params": {
    "Asset": "SB01",
    "Availability": 0,
    "GoodCount": 0,
    "OEE": 0,
    "Performance": 0,
    "Quality": 0,
    "Reason": null,
    "RowOBJ": -1,
    "Status": "Process",
    "StatusTime": "02:03:16",
    "TargetCount": 50,
    "WorkOrder": "192195-B01-PF414-130022",
    "path": "[default]Sanford/Molding/SB01"
  },
  "propConfig": {
    "custom.AndonHeader": {
      "binding": {
        "config": {
          "parameters": {
            "productionLineID": "{view.custom.ProductionLineID}"
          },
          "queryPath": "Andon/GetEventHeaderByProductionLineID",
          "returnFormat": "scalar"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.AndonStatus": {
      "binding": {
        "config": {
          "parameters": {
            "EventHeaderID": "{view.custom.AndonHeader}"
          },
          "queryPath": "Andon/GetEventStatusByEventHeaderID",
          "returnFormat": "scalar"
        },
        "type": "query"
      }
    },
    "custom.AssetType": {
      "binding": {
        "config": {
          "expression": "if(substring({view.params.Asset}, 0, 1) \u003d \u0027P\u0027, \u0027Assembly\u0027, \u0027Molding\u0027)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.DTReason": {
      "binding": {
        "config": {
          "parameters": {
            "EventID": "{view.custom.DowntimeEventID}"
          },
          "queryPath": "Downtime/GetDowntimeEventReasonByDowntimeID",
          "returnFormat": "scalar"
        },
        "transforms": [
          {
            "code": "\tif value \u003d\u003d None:\n\t\treturn value\n\telse:\n\t\treason \u003d system.db.runNamedQuery(\"Downtime/GetDowntimeReasonByID\", {\"ReasonID\": value})\n\t\treturn reason[0][0]",
            "type": "script"
          }
        ],
        "type": "query"
      },
      "persistent": true
    },
    "custom.DowntimeEventID": {
      "binding": {
        "config": {
          "parameters": {
            "ProductionLineID": "{view.custom.ProductionLineID}"
          },
          "queryPath": "Downtime/GetActiveDowntimeEventByProductionLineID",
          "returnFormat": "scalar"
        },
        "transforms": [
          {
            "code": "\tif value \u003d\u003d None:\n\t\treturn -1\n\telse:\n\t\treturn value",
            "type": "script"
          }
        ],
        "type": "query"
      },
      "persistent": true
    },
    "custom.ProductionLineID": {
      "binding": {
        "config": {
          "parameters": {
            "Name": "{view.params.Asset}"
          },
          "queryPath": "ProductionLine/GetProductionLineIDByName",
          "returnFormat": "scalar"
        },
        "type": "query"
      },
      "persistent": true
    },
    "params.Asset": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Availability": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.GoodCount": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.OEE": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Performance": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Quality": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Reason": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.RowOBJ": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Status": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.StatusTime": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.TargetCount": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.WorkOrder": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.path": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 425,
      "width": 300
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Production Asset"
        },
        "position": {
          "height": 32,
          "width": 258,
          "x": 18,
          "y": 11
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.Asset"
              },
              "type": "property"
            }
          },
          "props.textStyle.color": {
            "binding": {
              "config": {
                "expression": "if({parent.props.pipes[0].fill} \u003d \u0027#B22222\u0027 || {parent.props.pipes[0].fill} \u003d \u0027#228B22\u0027 || {parent.props.pipes[0].fill} \u003d \u0027#006E96\u0027, \u0027#D5D5D5\u0027, \r\n\u0027#000000\u0027)"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "fontSize": 22,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Status"
        },
        "position": {
          "height": 32,
          "width": 272,
          "x": 11,
          "y": 74.5
        },
        "propConfig": {
          "custom.Status": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "Asset": "{view.params.Asset}",
                  "AssetType": "{view.custom.AssetType}",
                  "ProductionSite": "{session.custom.ProductionSite}"
                },
                "tagPath": "[default]{ProductionSite}/{AssetType}/{Asset}/Status"
              },
              "type": "tag"
            }
          },
          "props.text": {
            "binding": {
              "config": {
                "expression": "now(2500)"
              },
              "transforms": [
                {
                  "code": "\tstatus \u003d self.view.params.Status\n\tOEE \u003d self.view.params.OEE\n\tif status \u003d\u003d \"Not Schedule\":\n\t\treturn \"Changeover\"\n\telif status is None:\n\t\treturn \"\"\n\telse:\n\t\treturn status",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          },
          "props.textStyle.color": {
            "binding": {
              "config": {
                "expression": "if({parent.props.pipes[0].fill} \u003d \u0027#B22222\u0027 || {parent.props.pipes[0].fill} \u003d \u0027#228B22\u0027 || {parent.props.pipes[0].fill} \u003d \u0027#006E96\u0027, \u0027#D5D5D5\u0027, \r\n\u0027#000000\u0027)"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "fontSize": 22,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "OEE"
        },
        "position": {
          "height": 54,
          "width": 198,
          "x": 49,
          "y": 154
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.OEE"
              },
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "property"
            }
          },
          "props.textStyle.color": {
            "binding": {
              "config": {
                "expression": "if({../Status.props.text} \u003d \u0027Changeover\u0027, \u0027#CCCC00\u0027, \r\nif(toFloat({this.props.text}) \u003e 75, \u0027#228B22\u0027, \r\n\tif(toFloat({this.props.text}) \u003e 50, \u0027#CCCC00\u0027, \r\n\t\t\u0027#B22222\u0027)))"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "fontSize": 38,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "OEE Label"
        },
        "position": {
          "height": 32,
          "width": 110,
          "x": 93,
          "y": 196
        },
        "props": {
          "text": "OEE",
          "textStyle": {
            "color": "#D5D5D5",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Availability Label"
        },
        "position": {
          "height": 32,
          "width": 110,
          "x": -7,
          "y": 262
        },
        "props": {
          "text": "Availability",
          "textStyle": {
            "color": "#D5D5D5",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Availability"
        },
        "position": {
          "height": 32,
          "width": 110,
          "x": -7,
          "y": 231
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.Availability"
              },
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "property"
            }
          },
          "props.textStyle.color": {
            "binding": {
              "config": {
                "expression": "if({../Status.props.text} \u003d \u0027Changeover\u0027, \u0027#CCCC00\u0027, \r\nif(toFloat({this.props.text}) \u003e 75, \u0027#228B22\u0027, \r\n\tif(toFloat({this.props.text}) \u003e 50, \u0027#CCCC00\u0027, \r\n\t\t\u0027#B22222\u0027)))"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "fontSize": 22,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Performance Label"
        },
        "position": {
          "height": 32,
          "width": 110,
          "x": 93,
          "y": 262
        },
        "props": {
          "text": "Performance",
          "textStyle": {
            "color": "#D5D5D5",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Performance"
        },
        "position": {
          "height": 32,
          "width": 110,
          "x": 93,
          "y": 231
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.Performance"
              },
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "property"
            }
          },
          "props.textStyle.color": {
            "binding": {
              "config": {
                "expression": "if({../Status.props.text} \u003d \u0027Changeover\u0027, \u0027#CCCC00\u0027, \r\nif(toFloat({this.props.text}) \u003e 75, \u0027#228B22\u0027, \r\n\tif(toFloat({this.props.text}) \u003e 50, \u0027#CCCC00\u0027, \r\n\t\t\u0027#B22222\u0027)))"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "fontSize": 22,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Quality Label"
        },
        "position": {
          "height": 32,
          "width": 110,
          "x": 191,
          "y": 262
        },
        "props": {
          "text": "Quality",
          "textStyle": {
            "color": "#D5D5D5",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Quality"
        },
        "position": {
          "height": 32,
          "width": 110,
          "x": 191,
          "y": 231
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.Quality"
              },
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "property"
            }
          },
          "props.textStyle.color": {
            "binding": {
              "config": {
                "expression": "if({../Status.props.text} \u003d \u0027Changeover\u0027, \u0027#CCCC00\u0027, \r\nif(toFloat({this.props.text}) \u003e 75, \u0027#228B22\u0027, \r\n\tif(toFloat({this.props.text}) \u003e 50, \u0027#CCCC00\u0027, \r\n\t\t\u0027#B22222\u0027)))"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "fontSize": 22,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Work Order"
        },
        "position": {
          "height": 54,
          "width": 282,
          "x": 6,
          "y": 302.5
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.WorkOrder"
              },
              "transforms": [
                {
                  "code": "\tif value \u003d\u003d None:\n\t\treturn \"No Work Order\"\n\telse:\n\t\treturn value",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "alignVertical": "top",
          "textStyle": {
            "color": "#D5D5D5",
            "fontSize": 24,
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Status Time"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 77.5,
          "y": 42.5
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "now(30000)"
              },
              "transforms": [
                {
                  "code": "\treturn self.view.params.StatusTime",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          },
          "props.textStyle.color": {
            "binding": {
              "config": {
                "expression": "if({parent.props.pipes[0].fill} \u003d \u0027#B22222\u0027 || {parent.props.pipes[0].fill} \u003d \u0027#228B22\u0027 || {parent.props.pipes[0].fill} \u003d \u0027#006E96\u0027, \u0027#D5D5D5\u0027, \r\n\u0027#000000\u0027)"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "fontSize": 28,
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "of"
        },
        "position": {
          "height": 32,
          "width": 201,
          "x": 46,
          "y": 380.5
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "if({view.params.TargetCount} \u003d null, \"\",\r\n\t{view.params.GoodCount} + \" of \" + {view.params.TargetCount})"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "color": "#D5D5D5",
            "fontSize": "1.25rem",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Reason"
        },
        "position": {
          "height": 32,
          "width": 272,
          "x": 11,
          "y": 106
        },
        "propConfig": {
          "custom.ReasonDisplay": {
            "binding": {
              "config": {
                "parameters": {
                  "ReasonID": "{view.params.Reason}"
                },
                "queryPath": "OperatorInterface/GetDTReasonByID",
                "returnFormat": "scalar"
              },
              "type": "query"
            }
          },
          "meta.visible": {
            "binding": {
              "config": {
                "expression": "if({view.custom.DowntimeEventID} \u003d -1 \u0026\u0026 ({view.custom.AndonStatus} \u003d 6 || {view.custom.AndonStatus} \u003c 3), false, true)"
              },
              "type": "expr"
            }
          },
          "props.text": {
            "binding": {
              "config": {
                "expression": "now(3000)"
              },
              "transforms": [
                {
                  "code": "\treasonDisplay \u003d self.custom.ReasonDisplay\n\tif reasonDisplay \u003d\u003d None or self.getSibling(\"Status\").props.text \u003d\u003d \"Running\":\n\t\treturn \"\"\n\telse:\n\t\treturn reasonDisplay",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          },
          "props.textStyle.color": {
            "binding": {
              "config": {
                "expression": "if({parent.props.pipes[0].fill} \u003d \u0027#FFE040\u0027, \u0027#000000\u0027, \u0027#D5D5D5\u0027)"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "textStyle": {
            "fontSize": 22,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "custom": {
          "LowLimit": 33,
          "WarningLimit": 66
        },
        "meta": {
          "name": "OEEGauge",
          "visible": false
        },
        "position": {
          "height": 82,
          "width": 112,
          "x": 90,
          "y": 153.5
        },
        "propConfig": {
          "props.outerAxis.ranges[0].end": {
            "binding": {
              "config": {
                "path": "this.custom.LowLimit"
              },
              "type": "property"
            }
          },
          "props.outerAxis.ranges[1].end": {
            "binding": {
              "config": {
                "path": "this.custom.WarningLimit"
              },
              "type": "property"
            }
          },
          "props.outerAxis.ranges[1].start": {
            "binding": {
              "config": {
                "path": "this.custom.LowLimit"
              },
              "type": "property"
            }
          },
          "props.outerAxis.ranges[2].start": {
            "binding": {
              "config": {
                "path": "this.custom.WarningLimit"
              },
              "type": "property"
            }
          },
          "props.value": {
            "binding": {
              "config": {
                "path": "view.params.OEE"
              },
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "backgroundColor": "",
          "innerAxis": {
            "data": "secondaryValue",
            "maxValue": 80,
            "percentRadius": 85,
            "show": false,
            "width": 1
          },
          "outerAxis": {
            "color": "#D5D5D5",
            "data": "value",
            "needle": {
              "color": "#2B2B2B"
            },
            "percentRadius": 100,
            "ranges": [
              {
                "color": "#FF0000",
                "start": 0,
                "width": 40
              },
              {
                "color": "#FFE100",
                "width": 40
              },
              {
                "color": "#6EB70B",
                "end": 100,
                "width": 40
              }
            ],
            "show": true,
            "tickMarks": {
              "length": 0,
              "thickness": 0
            },
            "width": 8
          },
          "style": {
            "classes": [],
            "color": null,
            "fontSize": 0
          },
          "text": null
        },
        "type": "ia.chart.gauge"
      },
      {
        "meta": {
          "name": "OEELabel",
          "visible": false
        },
        "position": {
          "height": 26,
          "width": 67.32,
          "x": 113,
          "y": 208
        },
        "props": {
          "style": {
            "color": "#D5D5D5",
            "fontSize": "0.9rem",
            "fontWeight": "bold",
            "textAlign": "center"
          },
          "text": "OEE"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "OEENum",
          "visible": false
        },
        "position": {
          "height": 24,
          "width": 108,
          "x": 94,
          "y": 147
        },
        "propConfig": {
          "props.style.color": {
            "binding": {
              "config": {
                "expression": "if({../Status.props.text} \u003d \u0027Changeover\u0027, \u0027#CCCC00\u0027, \r\nif(toFloat({this.props.text}) \u003e 75, \u0027#228B22\u0027, \r\n\tif(toFloat({this.props.text}) \u003e 50, \u0027#CCCC00\u0027, \r\n\t\t\u0027#B22222\u0027)))"
              },
              "type": "expr"
            }
          },
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.OEE"
              },
              "transforms": [
                {
                  "formatType": "numeric",
                  "formatValue": "percent",
                  "type": "format"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "fontSize": 22,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "props.pipes[0].fill": {
        "binding": {
          "config": {
            "expression": "now(3000)\r\n//if({view.custom.DTReason} \u003d \"Mold Change\" || {view.custom.DTReason} \u003d \"Changeover\", \u0027#006E96\u0027,\r\n//\tif({view.params.Status} \u003d \u0027Running\u0027, \u0027#228B22\u0027,\r\n//\t\tif({view.params.Status} \u003d \u0027Stopped\u0027, \u0027#B22222\u0027,\r\n//\t\t\r\n//\t\t\tif({view.params.Status} \u003d \u0027Not Scheduled\u0027, \u0027#006E96\u0027, //|| {view.params.Reason} \u003d 4 || {view.params.WorkOrder} \u003d null, \u0027#006E96\u0027,\r\n//\t\t\t\tif({view.params.Status} \u003d \u0027Andon\u0027, \u0027#FFE040\u0027,\r\n//\t\t\t\t\tif({view.custom.DowntimeEventID} !\u003d -1, \u0027#B22222\u0027,\r\n//\t\t\t\t\t\t\u0027#FFE040\u0027))))))"
          },
          "transforms": [
            {
              "code": "\tstatus \u003d self.view.params.Status\n\tif self.view.custom.DTReason \u003d\u003d \"Mold Change\" or self.view.custom.DTReason \u003d\u003d \"Changeover\":\n\t\treturn \u0027#006E96\u0027\n\telif status \u003d\u003d \"Running\":\n\t\treturn \u0027#228B22\u0027\n\telif status \u003d\u003d \"Stopped\":\n\t\treturn \u0027#B22222\u0027\n\telif status \u003d\u003d \"Not Scheduled\":\n\t\treturn \u0027#006E96\u0027\n\telif status \u003d\u003d \"Andon\":\n\t\treturn \u0027#FFE040\u0027\n\telif self.view.custom.DowntimeEventID !\u003d -1:\n\t\treturn \u0027#B22222\u0027\n\telse:\n\t\treturn \u0027#FFE040\u0027",
              "type": "script"
            }
          ],
          "type": "expr"
        }
      }
    },
    "props": {
      "pipes": [
        {
          "appearance": "auto",
          "end": "none",
          "flanges": true,
          "lineVariant": "solid",
          "name": "pipe",
          "origin": {
            "connections": [
              {
                "x": 300,
                "y": 75
              }
            ],
            "x": 0,
            "y": 75
          },
          "start": "none",
          "stroke": "",
          "visible": true,
          "width": 150
        },
        {
          "appearance": "auto",
          "end": "none",
          "fill": "#282828",
          "flanges": true,
          "lineVariant": "solid",
          "name": "pipe_0",
          "origin": {
            "connections": [
              {
                "x": 300,
                "y": 225
              }
            ],
            "x": 0,
            "y": 225
          },
          "start": "arrowInward",
          "stroke": "",
          "width": 150
        },
        {
          "appearance": "auto",
          "end": "none",
          "fill": "#505050",
          "flanges": true,
          "lineVariant": "solid",
          "name": "pipe_1",
          "origin": {
            "connections": [
              {
                "x": 0,
                "y": 362.5
              }
            ],
            "x": 300,
            "y": 362.5
          },
          "start": "none",
          "stroke": "",
          "visible": true,
          "width": 125
        }
      ],
      "style": {
        "borderBottomLeftRadius": 10,
        "borderBottomRightRadius": 10,
        "borderStyle": "solid",
        "borderTopLeftRadius": 10,
        "borderTopRightRadius": 10,
        "overflow": "hidden"
      }
    },
    "type": "ia.container.coord"
  }
}