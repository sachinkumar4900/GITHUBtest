{
  "custom": {
    "TagPath": "[default]Sanford/Molding/SB01/OEE_Daily/OEE",
    "key": [
      {
        "AllGoodCount": 19309,
        "AllTime": 950400,
        "Availability": 0.8659614755410758,
        "Date": 1743465600000,
        "Downtime": 115527,
        "Efficiency": 0.8852060697749049,
        "GoodCount": 14846,
        "OEE": 0.9861969979965336,
        "OOE": 0.9951276933114611,
        "Performance": 1.1389229825099725,
        "PlannedCount": 21813,
        "PlannedDowntime": 7735,
        "Quality": 0.9999326463258571,
        "RunTime": 746367,
        "ScheduledTime": 861894,
        "Scrap": 1,
        "TEEP": 0.8943574025581065,
        "TargetParts": 13036,
        "UnplannedDowntime": 107792
      }
    ]
  },
  "params": {
    "EndDate": "2025-04-12 00:00:00",
    "Month": "April",
    "ProductionLineID": 1,
    "StartDate": "2025-04-01 00:00:00"
  },
  "propConfig": {
    "custom.TagPath": {
      "binding": {
        "config": {
          "expression": "if({view.params.ProductionLineID} \u003d 1, \"[default]Sanford/Molding/SB01/OEE_Daily/OEE\",\r\nif({view.params.ProductionLineID} \u003d 2, \"[default]Sanford/Molding/SB02/OEE_Daily/OEE\",\r\nif({view.params.ProductionLineID} \u003d 3, \"[default]Sanford/Molding/SB03/OEE_Daily/OEE\",\r\nif({view.params.ProductionLineID} \u003d 4, \"[default]Sanford/Molding/SB04/OEE_Daily/OEE\",\r\nif({view.params.ProductionLineID} \u003d 5, \"[default]Moorpark/Molding/IM45/OEE_Daily/OEE\",\r\nif({view.params.ProductionLineID} \u003d 7, \"[default]Moorpark/Molding/IM48/OEE_Daily/OEE\",\r\nif({view.params.ProductionLineID} \u003d 8, \"[default]Moorpark/Molding/IM50/OEE_Daily/OEE\",\r\nif({view.params.ProductionLineID} \u003d 9, \"[default]Moorpark/Molding/IM54/OEE_Daily/OEE\",\r\nif({view.params.ProductionLineID} \u003d 11, \"[default]Sanford/Assembly/P08/OEE_Daily/OEE\",\r\n\"none\"\r\n)))))))))"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.key": {
      "binding": {
        "config": {
          "parameters": {
            "EndDate": "{view.params.EndDate}",
            "ProductionLineID": "{view.params.ProductionLineID}",
            "StartDate": "{view.params.StartDate}"
          },
          "queryPath": "ReportQuery/AvaibilityTargetParts",
          "returnFormat": "json"
        },
        "type": "query"
      },
      "persistent": true
    },
    "params.EndDate": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Month": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.ProductionLineID": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.StartDate": {
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root\").getChild(\"Image\").props.style \u003d {\"classes\":\"loader-28\"}\n\t"
      },
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 600,
      "width": 300
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "height": 0.0878,
          "width": 1
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.Month"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "borderStyle": "double",
            "fontSize": 22,
            "fontWeight": "bold",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "SimpleGauge"
        },
        "position": {
          "height": 0.3765,
          "width": 1,
          "y": 0.0829
        },
        "propConfig": {
          "props.value": {
            "binding": {
              "config": {
                "path": "view.custom.key[0].OEE"
              },
              "transforms": [
                {
                  "expression": "round(({value}*100),0)",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "animate": true,
          "arc": {
            "color": "#0000FF"
          },
          "arcBackground": {
            "color": "FF0000"
          },
          "endAngle": 405,
          "label": {
            "color": "#555555",
            "offsetY": 12,
            "size": 40
          },
          "startAngle": 135,
          "style": {
            "borderStyle": "groove",
            "fontSize": 22,
            "fontWeight": "bold",
            "paddingLeft": "3px"
          }
        },
        "type": "ia.chart.simple-gauge"
      },
      {
        "meta": {
          "name": "Label_0"
        },
        "position": {
          "height": 0.049,
          "rotate": {
            "anchor": "0% 12%"
          },
          "width": 0.2975,
          "x": 0.3524,
          "y": 0.387
        },
        "props": {
          "style": {
            "fontSize": 22,
            "fontWeight": "bold"
          },
          "text": "OEE %"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_1"
        },
        "position": {
          "height": 0.04,
          "rotate": {
            "anchor": "-120% -13%"
          },
          "width": 1,
          "y": 0.46
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\"Availability\" + \" -   \"+ round(({view.custom.key[0].Availability}*100),0)+ \"%\""
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "borderStyle": "groove",
            "fontSize": 20,
            "fontWeight": "bold",
            "paddingLeft": "3px"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_2"
        },
        "position": {
          "height": 0.04,
          "rotate": {
            "anchor": "-120% -13%"
          },
          "width": 1,
          "y": 0.4979
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\"Performance\" + \" -   \"+ round(({view.custom.key[0].Performance}*100),0)+ \"%\""
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "borderStyle": "groove",
            "fontSize": 20,
            "fontWeight": "bold",
            "paddingLeft": "3px"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_3"
        },
        "position": {
          "height": 0.04,
          "rotate": {
            "anchor": "-120% -13%"
          },
          "width": 1,
          "y": 0.5361
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\"Quality\" + \" -        \"+ round(({view.custom.key[0].Quality}*100),0)+ \"%\""
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "borderStyle": "groove",
            "fontSize": 20,
            "fontWeight": "bold",
            "paddingLeft": "3px"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_4"
        },
        "position": {
          "height": 0.04,
          "rotate": {
            "anchor": "-120% -13%"
          },
          "width": 1,
          "y": 0.5751
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\"Scheduled Time\" + \" - \"+ round(({view.custom.key[0].ScheduledTime}/60))+ \" Min\" + \"   Downtime\" + \" - \"+ round(({view.custom.key[0].Downtime}/60))+ \" Min\""
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "borderStyle": "groove",
            "fontSize": 12,
            "fontWeight": "bold",
            "paddingLeft": "3px"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_5"
        },
        "position": {
          "height": 0.04,
          "rotate": {
            "anchor": "-120% -13%"
          },
          "width": 1,
          "y": 0.6139
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\"Target \" + \" - \"+ round({view.custom.key[0].TargetParts})+ \"  Good -  \" +  round({view.custom.key[0].GoodCount})+ \" Scrap -  \"+ round({view.custom.key[0].Scrap})"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "borderStyle": "groove",
            "fontSize": 12,
            "fontWeight": "bold",
            "paddingLeft": "3px"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_6"
        },
        "position": {
          "height": 0.04,
          "rotate": {
            "anchor": "-120% -13%"
          },
          "width": 1,
          "y": 0.6527
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "\"Planned\" + \" -  \"+ round({view.custom.key[0].PlannedCount})+ \" All Good Parts -  \" + round({view.custom.key[0].AllGoodCount})"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "borderStyle": "groove",
            "fontSize": 12,
            "fontWeight": "bold",
            "paddingLeft": "3px"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TimeSeriesChart"
        },
        "position": {
          "height": 0.299,
          "width": 1,
          "y": 0.6918
        },
        "propConfig": {
          "props.series[0].data": {
            "binding": {
              "config": {
                "expression": "now(30000)"
              },
              "transforms": [
                {
                  "code": "    #import system  # Ensure system functions are available\n\n    # Define tag path and time range\n    tagPath \u003d self.view.custom.TagPath  # Ensure this is correct\n    startTime \u003d self.view.params.StartDate\n    endTime \u003d  self.view.params.EndDate\n\n    # Query historical data\n    dataSet \u003d system.tag.queryTagHistory(\n        paths\u003d[tagPath], \n        startDate\u003dstartTime, \n        endDate\u003dendTime, \n        aggregationMode\u003d\"MinMax\", \n        returnSize\u003d-1\n    )\n\n    # Extract the average value\n    if dataSet.getRowCount() \u003e 0:\n        return dataSet\n    else :\n    \treturn 0",
                  "type": "script"
                }
              ],
              "type": "expr"
            },
            "onChange": {
              "enabled": null,
              "script": "\tself.getSibling(\"Image\").props.style \u003d {\"classes\":\"\"}"
            }
          },
          "props.timeAxis.tickCount": {
            "binding": {
              "config": {
                "expression": "now(30000)"
              },
              "transforms": [
                {
                  "code": "    #import system  # Ensure system functions are available\n\n    # Define tag path and time range\n    tagPath \u003d self.view.custom.TagPath  # Ensure this is correct\n    startTime \u003d self.view.params.StartDate\n    endTime \u003d  self.view.params.EndDate\n\n    # Query historical data\n    dataSet \u003d system.tag.queryTagHistory(\n        paths\u003d[tagPath], \n        startDate\u003dstartTime, \n        endDate\u003dendTime, \n        aggregationMode\u003d\"MinMax\", \n        returnSize\u003d-1\n    )\n\n    # Extract the average value\n    if dataSet.getRowCount() \u003e 0:\n        return dataSet.getRowCount()\n    else :\n    \treturn 0",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "plots": [
            {
              "axes": [
                {
                  "alignment": "left",
                  "grid": {
                    "color": "",
                    "dashArray": 0,
                    "opacity": 0.9,
                    "style": {
                      "classes": ""
                    },
                    "visible": false
                  },
                  "label": {
                    "font": {
                      "color": "",
                      "size": 20
                    },
                    "offset": 0,
                    "style": {
                      "classes": ""
                    },
                    "text": "OEE%",
                    "visible": true
                  },
                  "max": "",
                  "min": "",
                  "name": "Percent",
                  "style": {
                    "classes": ""
                  },
                  "tick": {
                    "color": "",
                    "count": "Auto",
                    "label": {
                      "font": {
                        "color": "",
                        "size": 10
                      },
                      "format": "Auto",
                      "style": {
                        "classes": ""
                      }
                    },
                    "style": {
                      "classes": ""
                    }
                  },
                  "width": 60
                }
              ],
              "markers": [],
              "relativeWeight": 1,
              "trends": [
                {
                  "axis": "Percent",
                  "baselines": [],
                  "breakLine": true,
                  "columns": [],
                  "interpolation": "curveLinear",
                  "radius": 2,
                  "series": "Boiler",
                  "stack": true,
                  "type": "line",
                  "visible": true
                },
                {
                  "axis": "Percent",
                  "baselines": [],
                  "breakLine": true,
                  "columns": [],
                  "interpolation": "curveLinear",
                  "radius": 5,
                  "series": "Boiler",
                  "stack": true,
                  "type": "scatter",
                  "visible": true
                }
              ]
            }
          ],
          "series": [
            {
              "name": "Boiler"
            }
          ],
          "timeAxis": {},
          "timeRange": {
            "visible": false
          },
          "xTrace": {
            "infoBox": {
              "font": {
                "size": 16
              }
            }
          }
        },
        "type": "ia.chart.timeseries"
      },
      {
        "meta": {
          "name": "Image"
        },
        "position": {
          "height": 0.1678,
          "width": 0.3378,
          "x": 0.32,
          "y": 0.42
        },
        "type": "ia.display.image"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "mode": "percent",
      "style": {
        "borderStyle": "groove"
      }
    },
    "type": "ia.container.coord"
  }
}